// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	entity "git.garena.com/sea-labs-id/batch-05/assignment-golang-backend/entity"
	mock "github.com/stretchr/testify/mock"
)

// SourceOfFundRepository is an autogenerated mock type for the SourceOfFundRepository type
type SourceOfFundRepository struct {
	mock.Mock
}

// GetById provides a mock function with given fields: id
func (_m *SourceOfFundRepository) GetById(id uint) (*entity.SourceOfFund, error) {
	ret := _m.Called(id)

	var r0 *entity.SourceOfFund
	if rf, ok := ret.Get(0).(func(uint) *entity.SourceOfFund); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.SourceOfFund)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSourceOfFundRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewSourceOfFundRepository creates a new instance of SourceOfFundRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSourceOfFundRepository(t mockConstructorTestingTNewSourceOfFundRepository) *SourceOfFundRepository {
	mock := &SourceOfFundRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
