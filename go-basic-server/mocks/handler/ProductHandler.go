// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// ProductHandler is an autogenerated mock type for the ProductHandler type
type ProductHandler struct {
	mock.Mock
}

// CreateProduct provides a mock function with given fields: w, r
func (_m *ProductHandler) CreateProduct(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// DeleteProduct provides a mock function with given fields: w, r
func (_m *ProductHandler) DeleteProduct(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetAllProduct provides a mock function with given fields: w, r
func (_m *ProductHandler) GetAllProduct(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetProduct provides a mock function with given fields: w, r
func (_m *ProductHandler) GetProduct(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// UpdateProduct provides a mock function with given fields: w, r
func (_m *ProductHandler) UpdateProduct(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

type mockConstructorTestingTNewProductHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewProductHandler creates a new instance of ProductHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProductHandler(t mockConstructorTestingTNewProductHandler) *ProductHandler {
	mock := &ProductHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
