openapi: 3.0.3
info:
  title: Library API
  description: Library API provides for borrow and return books in the online library
  termsOfService: http://swagger.io/terms/
  contact:
    email: arief.saferman@shopee.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080
tags:
  - name: book
    description: Everything about book
security:
  - BearerAuth: []
paths:
  /books:
    get:
      tags:
        - book
      summary: Finds All Books
      description: Available book on library
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'        
        '500':
          description: Internal Server Error
      security:
        - BearerAuth: []
    post:
      tags:
        - book
      summary: Post a book 
      description: Add a book into the library
      requestBody:
        content:
          application/json:
            schema:
              $ref:  '#/components/schemas/BookDTO'
        required: true
      responses:
        '200':
          description: successful added a book
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Book'
        '400':
          description: Bad request
        '500':
          description: Internal server error
      security:
        - BearerAuth: []
  /borrow:
    post:
      tags: 
        - borrow
      summary: Borrow a book 
      description: Borrow a book that is available on library
      requestBody:
        content:
          application/json:
            schema:
              $ref:  '#/components/schemas/Borrow'
        required: true
      responses:
        '200':
          description: successful borrow a book
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Borrow'
        '400':
          description: Bad request
        '403':
          description: Forbidden access
        '500':
          description: Internal server error
      security:
        - BearerAuth: []
  /borrow/{recordId}:
    put:
      tags:
        - return
      summary: Return a book by record id 
      description: returns a single book
      parameters:
        - name: recordId
          in: path
          description: ID of record that needs to be return book
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful return a book 
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Borrow'
        '400':
          description: Bad request
        '403':
          description: Forbidden access
        '500':
          description: Internal server error
      security:
        - BearerAuth: []
        
components:
  schemas:
    Book:
      required:
        - id
        - title
        - author_id
        - quantity
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: clean code
        description:
          type: string
          example: refactoring clean code
        quantity:
          type: integer
          format: int64
          example: 1
        cover:
          type: string
          example: https://image.com/img.com
    BookDTO:
      required:
        - title
        - description
        - quantity
        - author_id
      type: object
      properties:
        title:
          type: string
          example: clean code
        description:
          type: string
          example: refactoring clean code
        quantity:
          type: integer
          format: int64
          example: 1
        author_id:
          type: integer
          format: int64
          example: 10
    Borrow:
      required:
        - user_id
        - book_id
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 1
        book_id:
          type: integer
          format: int64
          example: 1
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer